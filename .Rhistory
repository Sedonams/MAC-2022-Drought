library(visdat)
vis_miss(ds)
ds <- read.csv("data/MAC22_cleaned.csv") #Using the cleaned up dataset. Missing some things like dmgr.
subset <- ds %>%
select(genotype, treatment, all_of(vars))
vis_miss(subset)
vars <- c("shoot_wt", "florets", "d13c", "c", "d15n", "n", "p", "cn_ratio", "np_ratio")
subset <- ds %>%
select(genotype, treatment, all_of(vars)) %>%
drop_na()
vis_miss(subset)
pca_data <- ds %>%
select(genotype, treatment, all_of(vars)) %>%
drop_na()
vis_miss(subset)
trait_matrix <- pca_data %>% select(all_of(vars))
pca_result <- prcomp(trait_matrix, center = TRUE, scale. = TRUE)
# Add scores and metadata
scores <- as.data.frame(pca_result$x)
setwd("C:/Users/beabo/OneDrive/Documents/NAU/Sorghum/MAC-2022-Drought")
ds <- read.csv("data/MAC22_cleaned.csv") #Using the cleaned up dataset. Missing some things like dmgr.
theme_set(theme_bw())
vars <- c("shoot_wt", "florets", "arb", "rlc_p", "amf_in_dry_soil", "d13c", "c", "d15n", "n", "p", "cn_ratio", "np_ratio")
heatmap_df <- ds %>%
select(treatment, all_of(vars)) %>%
pivot_longer(cols = all_of(vars), names_to = "variable", values_to = "value") %>%
group_by(treatment, variable) %>%
summarise(mean_val = mean(value, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(names_from = treatment, values_from = mean_val) %>%
mutate(effect = Droughted - Watered)  # change if your treatment labels differ
# Step 2: Plot heatmap of effects
ggplot(heatmap_df, aes(x = variable, y = 1, fill = effect)) +
geom_tile(color = "white") +
scale_fill_gradient2(
low = "blue", mid = "white", high = "red", midpoint = 0,
name = "Mean diff\n(drought - control)"
) +
labs(x = "Variable", y = NULL, title = "Effect of drought on variables") +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))
ds_scaled <- ds %>%
mutate(across(all_of(vars), ~ scale(.)[,1]))
vars <- c("shoot_wt", "florets", "d13c", "c", "d15n", "n", "p", "cn_ratio", "np_ratio")
# Step 2: Calculate effect on standardized values
heatmap_df <- ds_scaled %>%
select(treament, all_of(vars)) %>%
pivot_longer(cols = all_of(vars), names_to = "variable", values_to = "value") %>%
group_by(treament, variable) %>%
summarise(mean_val = mean(value, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(names_from = treament, values_from = mean_val) %>%
mutate(effect = drought - control)  # adjust if labels differ
# Step 2: Calculate effect on standardized values
heatmap_df <- ds_scaled %>%
select(treatment, all_of(vars)) %>%
pivot_longer(cols = all_of(vars), names_to = "variable", values_to = "value") %>%
group_by(treatment, variable) %>%
summarise(mean_val = mean(value, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(names_from = treatment, values_from = mean_val) %>%
mutate(effect = drought - control)  # adjust if labels differ
# Step 2: Calculate effect on standardized values
heatmap_df <- ds_scaled %>%
select(treatment, all_of(vars)) %>%
pivot_longer(cols = all_of(vars), names_to = "variable", values_to = "value") %>%
group_by(treatment, variable) %>%
summarise(mean_val = mean(value, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(names_from = treatment, values_from = mean_val) %>%
mutate(effect = Droughted - Watered)  # adjust if labels differ
# Step 3: Plot heatmap
ggplot(heatmap_df, aes(x = variable, y = 1, fill = effect)) +
geom_tile(color = "white") +
scale_fill_gradient2(
low = "blue", mid = "white", high = "red", midpoint = 0,
name = "Std. mean diff\n(drought - control)"
) +
labs(x = "Variable", y = NULL, title = "Effect of drought on variables (standardized)") +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))
vars <- c("shoot_wt", "florets", "d13c", "c", "d15n", "n", "p", "cn_ratio", "np_ratio")
ds_scaled <- ds %>%
group_by(genotype) %>%
mutate(across(all_of(vars), ~ scale(.)[,1])) %>%
ungroup()
# Step 2: Calculate effect by genotype
heatmap_df <- ds_scaled %>%
select(genotype, treatment, all_of(vars)) %>%
pivot_longer(cols = all_of(vars), names_to = "variable", values_to = "value") %>%
group_by(genotype, treatment, variable) %>%
summarise(mean_val = mean(value, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(names_from = treatment, values_from = mean_val) %>%
mutate(effect = Droughted - Watered)   # change names if needed
# Step 3: Plot heatmap with genotype facetting
ggplot(heatmap_df, aes(x = variable, y = genotype, fill = effect)) +
geom_tile(color = "white") +
scale_fill_gradient2(
low = "blue", mid = "white", high = "red", midpoint = 0,
name = "Std. diff\n(drought - control)"
) +
labs(x = "Variable", y = "Genotype", title = "Drought effects by genotype (standardized)") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ds_scaled <- ds %>%
group_by(genotype) %>%
mutate(across(all_of(vars), ~ scale(.)[,1])) %>%
ungroup()
# Step 2: Calculate drought effect
heatmap_df <- ds_scaled %>%
select(genotype, treatment, all_of(vars)) %>%
pivot_longer(cols = all_of(vars), names_to = "variable", values_to = "value") %>%
group_by(genotype, treatment, variable) %>%
summarise(mean_val = mean(value, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(names_from = treatment, values_from = mean_val) %>%
mutate(effect = Droughted - Watered)
# Step 3: Order variables by mean effect across genotypes (descending)
var_order <- heatmap_df %>%
group_by(variable) %>%
summarise(mean_effect = mean(effect, na.rm = TRUE), .groups = "drop") %>%
arrange(desc(mean_effect)) %>%
pull(variable)
heatmap_df <- heatmap_df %>%
mutate(variable = factor(variable, levels = var_order))
# Step 4: Plot
ggplot(heatmap_df, aes(x = variable, y = genotype, fill = effect)) +
geom_tile(color = "white") +
scale_fill_gradient2(
low = "blue", mid = "white", high = "red", midpoint = 0,
name = "Std. diff\n(Drought - Watered)"
) +
labs(
x = "Variable",
y = "Genotype",
title = "Drought effects by genotype (standardized)"
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)
)
# Step 4: Plot
ggplot(heatmap_df, aes(x = variable, y = genotype, fill = effect)) +
geom_tile(color = "white") +
scale_fill_gradient2(
low = "blue", mid = "white", high = "red", midpoint = 0,
name = "Std. diff\n(Drought - Watered)"
) +
scale_x_discrete(position = "top") +  # move x-axis labels to top
labs(
x = "Variable",
y = "Genotype",
title = "Drought effects by genotype (standardized)"
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 0),
plot.title = element_text(hjust = 0.5)
)
colnames(ds)
vars <- c("shoot_wt", "florets","arb", "amf_in_dry_soil" , "rlc_p","dse_in_dry_soil", "d13c", "c", "d15n", "n", "p", "cn_ratio", "np_ratio")
ds_scaled <- ds %>%
group_by(genotype) %>%
mutate(across(all_of(vars), ~ scale(.)[,1])) %>%
ungroup()
# Step 2: Calculate drought effect and stats
stats_df <- ds_scaled %>%
select(genotype, treatment, all_of(vars)) %>%
pivot_longer(cols = all_of(vars), names_to = "variable", values_to = "value") %>%
group_by(genotype, variable) %>%
summarise(
ttest = list(t.test(value ~ treatment)),  # separate test for each
.groups = "drop"
) %>%
mutate(
p_value = map_dbl(ttest, ~ .x$p.value),
stars = case_when(
p_value <= 0.001 ~ "***",
p_value <= 0.01  ~ "**",
p_value <= 0.05  ~ "*",
TRUE ~ ""
)
) %>%
select(-ttest)
ds <- read.csv("data/MAC22_cleaned.csv") #Using the cleaned up dataset. Missing some things like dmgr.
theme_set(theme_bw())
vars <- c("shoot_wt", "florets","arb","vesicles", "amf_in_dry_soil" , "rlc_p","dse_in_dry_soil", "d13c", "c", "d15n", "n", "p", "cn_ratio", "np_ratio")
ds_scaled <- ds %>%
group_by(genotype) %>%
mutate(across(all_of(vars), ~ scale(.)[,1])) %>%
ungroup()
# Step 2: Calculate drought effect and stats
stats_df <- ds_scaled %>%
select(genotype, treatment, all_of(vars)) %>%
pivot_longer(cols = all_of(vars), names_to = "variable", values_to = "value") %>%
group_by(genotype, variable) %>%
summarise(
p_value = tryCatch({
# Only run t-test if both treatment levels present
if (n_distinct(treatment) == 2) {
t.test(value ~ treatment)$p.value
} else {
NA_real_
}
}, error = function(e) NA_real_),
.groups = "drop"
) %>%
mutate(
stars = case_when(
!is.na(p_value) & p_value <= 0.001 ~ "***",
!is.na(p_value) & p_value <= 0.01  ~ "**",
!is.na(p_value) & p_value <= 0.05  ~ "*",
TRUE ~ ""
)
)
colnames(ds)
vars <- c("shoot_wt", "florets","arb","vesicle_or_spore", "amf_in_dry_soil" , "rlc_p","dse_in_dry_soil", "d13c", "c", "d15n", "n", "p", "cn_ratio", "np_ratio")
ds_scaled <- ds %>%
group_by(genotype) %>%
mutate(across(all_of(vars), ~ scale(.)[,1])) %>%
ungroup()
# Step 2: Calculate drought effect and stats
stats_df <- ds_scaled %>%
select(genotype, treatment, all_of(vars)) %>%
pivot_longer(cols = all_of(vars), names_to = "variable", values_to = "value") %>%
group_by(genotype, variable) %>%
summarise(
p_value = tryCatch({
# Only run t-test if both treatment levels present
if (n_distinct(treatment) == 2) {
t.test(value ~ treatment)$p.value
} else {
NA_real_
}
}, error = function(e) NA_real_),
.groups = "drop"
) %>%
mutate(
stars = case_when(
!is.na(p_value) & p_value <= 0.001 ~ "***",
!is.na(p_value) & p_value <= 0.01  ~ "**",
!is.na(p_value) & p_value <= 0.05  ~ "*",
TRUE ~ ""
)
)
# Step 3: Calculate effect (for coloring)
heatmap_df <- ds_scaled %>%
select(genotype, treatment, all_of(vars)) %>%
pivot_longer(cols = all_of(vars), names_to = "variable", values_to = "value") %>%
group_by(genotype, treatment, variable) %>%
summarise(mean_val = mean(value, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(names_from = treatment, values_from = mean_val) %>%
mutate(effect = Droughted - Watered)
# Step 4: Order variables by mean effect
var_order <- heatmap_df %>%
group_by(variable) %>%
summarise(mean_effect = mean(effect, na.rm = TRUE), .groups = "drop") %>%
arrange(desc(mean_effect)) %>%
pull(variable)
heatmap_df <- heatmap_df %>%
mutate(variable = factor(variable, levels = var_order))
# Step 5: Merge stats into heatmap data
heatmap_df <- left_join(heatmap_df, stats_df, by = c("genotype", "variable"))
# Step 6: Plot heatmap with stars
ggplot(heatmap_df, aes(x = variable, y = genotype, fill = effect)) +
geom_tile(color = "white") +
geom_text(aes(label = stars), color = "black", size = 4) +
scale_fill_gradient2(
low = "blue", mid = "white", high = "red", midpoint = 0,
name = "Std. diff\n(Drought - Watered)"
) +
scale_x_discrete(position = "top") +
labs(
x = "Variable",
y = "Genotype",
title = "Drought effects by genotype (standardized)"
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 0),
plot.title = element_text(hjust = 0.5)
)
ds_scaled <- ds %>%
group_by(genotype) %>%
mutate(across(all_of(vars), ~ scale(.)[,1])) %>%
ungroup()
# Step 2: Safe t-tests for each genotype × variable
stats_df <- ds_scaled %>%
select(genotype, treatment, all_of(vars)) %>%
pivot_longer(cols = all_of(vars), names_to = "variable", values_to = "value") %>%
group_by(genotype, variable) %>%
summarise(
p_value = tryCatch({
if (n_distinct(treatment) == 2) {
t.test(value ~ treatment)$p.value
} else {
NA_real_
}
}, error = function(e) NA_real_),
.groups = "drop"
) %>%
mutate(
stars = case_when(
!is.na(p_value) & p_value <= 0.001 ~ "***",
!is.na(p_value) & p_value <= 0.01  ~ "**",
!is.na(p_value) & p_value <= 0.05  ~ "*",
TRUE ~ ""
)
)
# Step 3: Calculate drought effect (for coloring)
heatmap_df <- ds_scaled %>%
select(genotype, treatment, all_of(vars)) %>%
pivot_longer(cols = all_of(vars), names_to = "variable", values_to = "value") %>%
group_by(genotype, treatment, variable) %>%
summarise(mean_val = mean(value, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(names_from = treatment, values_from = mean_val) %>%
mutate(effect = Droughted - Watered)
# Step 4: Order variables from most red to most blue
var_order <- heatmap_df %>%
group_by(variable) %>%
summarise(mean_effect = mean(effect, na.rm = TRUE), .groups = "drop") %>%
arrange(desc(mean_effect)) %>%
pull(variable)
heatmap_df <- heatmap_df %>%
mutate(variable = factor(variable, levels = var_order))
# Step 5: Merge stats into heatmap data
heatmap_df <- left_join(heatmap_df, stats_df, by = c("genotype", "variable"))
# Step 6: Plot heatmap with stars
ggplot(heatmap_df, aes(x = variable, y = genotype, fill = effect)) +
geom_tile(color = "white") +
geom_text(aes(label = stars), color = "black", size = 4) +
scale_fill_gradient2(
low = "blue", mid = "white", high = "red", midpoint = 0,
name = "Std. diff\n(Drought - Watered)"
) +
scale_x_discrete(position = "top") +
labs(
x = "Variable",
y = "Genotype",
title = "Drought effects by genotype (standardized)"
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 0),
plot.title = element_text(hjust = 0.5)
)
colanmes(ds)
colnames(ds)
vars <- c("arb", "am_hyphae", "dse", "lse", "vesicle_or_spore", "amf_in_dry_soil" , "rlc_p","dse_in_dry_soil")
ds_scaled <- ds %>%
group_by(genotype) %>%
mutate(across(all_of(vars), ~ scale(.)[,1])) %>%
ungroup()
# Step 2: Safe t-tests for each genotype × variable
stats_df <- ds_scaled %>%
select(genotype, treatment, all_of(vars)) %>%
pivot_longer(cols = all_of(vars), names_to = "variable", values_to = "value") %>%
group_by(genotype, variable) %>%
summarise(
p_value = tryCatch({
if (n_distinct(treatment) == 2) {
t.test(value ~ treatment)$p.value
} else {
NA_real_
}
}, error = function(e) NA_real_),
.groups = "drop"
) %>%
mutate(
stars = case_when(
!is.na(p_value) & p_value <= 0.001 ~ "***",
!is.na(p_value) & p_value <= 0.01  ~ "**",
!is.na(p_value) & p_value <= 0.05  ~ "*",
TRUE ~ ""
)
)
# Step 3: Calculate drought effect (for coloring)
heatmap_df <- ds_scaled %>%
select(genotype, treatment, all_of(vars)) %>%
pivot_longer(cols = all_of(vars), names_to = "variable", values_to = "value") %>%
group_by(genotype, treatment, variable) %>%
summarise(mean_val = mean(value, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(names_from = treatment, values_from = mean_val) %>%
mutate(effect = Droughted - Watered)
# Step 4: Order variables from most red to most blue
var_order <- heatmap_df %>%
group_by(variable) %>%
summarise(mean_effect = mean(effect, na.rm = TRUE), .groups = "drop") %>%
arrange(desc(mean_effect)) %>%
pull(variable)
heatmap_df <- heatmap_df %>%
mutate(variable = factor(variable, levels = var_order))
# Step 5: Merge stats into heatmap data
heatmap_df <- left_join(heatmap_df, stats_df, by = c("genotype", "variable"))
# Step 6: Plot heatmap with stars
ggplot(heatmap_df, aes(x = variable, y = genotype, fill = effect)) +
geom_tile(color = "white") +
geom_text(aes(label = stars), color = "black", size = 4) +
scale_fill_gradient2(
low = "blue", mid = "white", high = "red", midpoint = 0,
name = "Std. diff\n(Drought - Watered)"
) +
scale_x_discrete(position = "top") +
labs(
x = "Variable",
y = "Genotype",
title = "Drought effects by genotype (standardized)"
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 0),
plot.title = element_text(hjust = 0.5)
)
ds_scaled <- ds %>%
group_by(genotype) %>%
mutate(across(all_of(vars), ~ scale(.)[,1])) %>%
ungroup()%>%
drop_na()
# Step 2: Safe t-tests for each genotype × variable
stats_df <- ds_scaled %>%
select(genotype, treatment, all_of(vars)) %>%
pivot_longer(cols = all_of(vars), names_to = "variable", values_to = "value") %>%
group_by(genotype, variable) %>%
summarise(
p_value = tryCatch({
if (n_distinct(treatment) == 2) {
t.test(value ~ treatment)$p.value
} else {
NA_real_
}
}, error = function(e) NA_real_),
.groups = "drop"
) %>%
mutate(
stars = case_when(
!is.na(p_value) & p_value <= 0.001 ~ "***",
!is.na(p_value) & p_value <= 0.01  ~ "**",
!is.na(p_value) & p_value <= 0.05  ~ "*",
TRUE ~ ""
)
)
# Step 3: Calculate drought effect (for coloring)
heatmap_df <- ds_scaled %>%
select(genotype, treatment, all_of(vars)) %>%
pivot_longer(cols = all_of(vars), names_to = "variable", values_to = "value") %>%
group_by(genotype, treatment, variable) %>%
summarise(mean_val = mean(value, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(names_from = treatment, values_from = mean_val) %>%
mutate(effect = Droughted - Watered)
# Step 4: Order variables from most red to most blue
var_order <- heatmap_df %>%
group_by(variable) %>%
summarise(mean_effect = mean(effect, na.rm = TRUE), .groups = "drop") %>%
arrange(desc(mean_effect)) %>%
pull(variable)
heatmap_df <- heatmap_df %>%
mutate(variable = factor(variable, levels = var_order))
ds_scaled <- ds %>%
group_by(genotype) %>%
mutate(across(all_of(vars), ~ scale(.)[,1])) %>%
ungroup()
# Step 2: Safe t-tests for each genotype × variable
stats_df <- ds_scaled %>%
select(genotype, treatment, all_of(vars)) %>%
pivot_longer(cols = all_of(vars), names_to = "variable", values_to = "value") %>%
group_by(genotype, variable) %>%
summarise(
p_value = tryCatch({
if (n_distinct(treatment) == 2) {
t.test(value ~ treatment)$p.value
} else {
NA_real_
}
}, error = function(e) NA_real_),
.groups = "drop"
) %>%
mutate(
stars = case_when(
!is.na(p_value) & p_value <= 0.001 ~ "***",
!is.na(p_value) & p_value <= 0.01  ~ "**",
!is.na(p_value) & p_value <= 0.05  ~ "*",
TRUE ~ ""
)
)
# Step 3: Calculate drought effect (for coloring)
heatmap_df <- ds_scaled %>%
select(genotype, treatment, all_of(vars)) %>%
pivot_longer(cols = all_of(vars), names_to = "variable", values_to = "value") %>%
group_by(genotype, treatment, variable) %>%
summarise(mean_val = mean(value, na.rm = TRUE), .groups = "drop") %>%
pivot_wider(names_from = treatment, values_from = mean_val) %>%
mutate(effect = Droughted - Watered)
# Step 4: Order variables from most red to most blue
var_order <- heatmap_df %>%
group_by(variable) %>%
summarise(mean_effect = mean(effect, na.rm = TRUE), .groups = "drop") %>%
arrange(desc(mean_effect)) %>%
pull(variable)
heatmap_df <- heatmap_df %>%
mutate(variable = factor(variable, levels = var_order))
# Step 5: Merge stats into heatmap data
heatmap_df <- left_join(heatmap_df, stats_df, by = c("genotype", "variable"))
# Step 6: Plot heatmap with stars
ggplot(heatmap_df, aes(x = variable, y = genotype, fill = effect)) +
geom_tile(color = "white") +
geom_text(aes(label = stars), color = "black", size = 4) +
scale_fill_gradient2(
low = "blue", mid = "white", high = "red", midpoint = 0,
name = "Std. diff\n(Drought - Watered)"
) +
scale_x_discrete(position = "top") +
labs(
x = "Variable",
y = "Genotype",
title = "Drought effects by genotype (standardized)"
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 0),
plot.title = element_text(hjust = 0.5)
)
